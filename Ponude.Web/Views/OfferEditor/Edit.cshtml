@using Ponude.Api.Models;
@model Offer
@{
    ViewData["Title"] = "Ponuda";
}
<h2>Broj ponude: @Model.Id <span class="float-end">Datum ponude: @Model.Date.ToString("dd.MM.yyyy.")</span> </h2>

<table class="table" id="offerItemsTable">
    <thead>
        <tr>
            <th>Stavka br.</th>
            <th>Artikl</th>
            <th>Cijena</th>
            <th>Količina</th>
            <th>Ukupna cijena</th>
            <th>Izmjena</th>
        </tr>
    </thead>
    <tbody>
        @{
            int itemNumber = 1;
        }
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@itemNumber</td>
                <td>@item.Product</td>
                <td>@item.Price</td>
                <td>@item.Quantity</td>
                <td class="totalPrice">@((item.Price * item.Quantity).ToString("F2"))</td>
                <td>
                    <a class="button" href="@Url.Action("EditOfferItem", new { offerId = Model.Id, itemId = item.Id })">Izmijeni stavku</a>
                </td>
                @{
                    itemNumber++;
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3" class="text-end">Total:</td>
            <td id="totalAmount"></td>
            <td></td>
        </tr>
    </tfoot>
</table>

<div>
    <a class="btn btn-primary" id="addItemBtn">Nova stavka</a>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            let itemNumber = @Model.Items.Count + 1;

            updateTotalAmount();

            $("#addItemBtn").click(function () {
                var newRow = `<tr>
                                <td>${itemNumber}</td>
                                <td><select class="select2" style="width:100%"></select></td>
                                <td><input type="number" class="unitPrice" /></td>
                                <td><input type="number" class="quantity" step="1" /></td>
                                <td class="totalPrice">0.00</td>
                                <td><button class="deleteItemBtn">Obriši</button></td>
                              </tr>`;
                $('#offerItemsTable tbody').append(newRow);
                initializeSelect2();
                itemNumber++;
            });

            $(document).on('click', '.deleteItemBtn', function () {
                $(this).closest('tr').remove();
                itemNumber--;
                updateTotalAmount();
            });

            $(document).on('input', '.unitPrice, .quantity', function () {
                var row = $(this).closest('tr');
                var unitPrice = parseFloat(row.find('.unitPrice').val()) || 0;
                var quantity = parseInt(row.find('.quantity').val()) || 0;
                var totalPrice = (unitPrice * quantity).toFixed(2);
                row.find('.totalPrice').text(totalPrice);
                updateTotalAmount();
            });

            function initializeSelect2() {
                $('.select2').select2({
                    placeholder: 'Odaberite artikl',
                    allowClear: true,
                    minimumInputLength: 3,
                    ajax: {
                        url: 'https://localhost:7152/api/products',
                        dataType: 'json',
                        delay: 250,
                        processResults: function (data) {
                            return {
                                results: data.map(function (item) {
                                    return { id: item.id, text: item.name };
                                })
                            };
                        }
                    }
                });
            }

            function updateTotalAmount() {
                var totalAmount = 0;
                $('#offerItemsTable .totalPrice').each(function () {
                    totalAmount += parseFloat($(this).text()) || 0;
                });
                $('#totalAmount').text(totalAmount.toFixed(2));
            }

            function addQuantityValidation() {
                $(document).on('keydown', '.quantity', function (e) {
                    var key = e.key;
                    if (key === '.' || key === 'e') {
                        e.preventDefault();
                    }
                });
            }

            addQuantityValidation();
        });
    </script>
}